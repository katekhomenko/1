/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*,:after,:before{box-sizing:border-box}html{font-size:62.5%}body{font:15px/24px Roboto,sans-serif;width:100%}ul{list-style:none;margin:0}a{text-decoration:none;color:#fff}button{border:none}h1,h2,h3{margin:0}.title{font-family:Montserrat,sans-serif;font-weight:700;text-transform:uppercase}.pre-title{font-family:Kaushan Script}.icon{background:url(../img/sprite.png) no-repeat;display:inline-block}.line{width:60px;height:3px;background-color:#f38181;margin:0 0 45px}.wrapper{overflow:hidden;width:100%;min-width:320px}.page__inner{max-width:1230px;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:0 15px;margin:0 auto;-ms-flex-direction:column;flex-direction:column}.header,.page__inner{display:-ms-flexbox;display:flex}.header{max-width:1260px;width:100%;-ms-flex-pack:justify;justify-content:space-between;padding:40px 15px 0}.header__name{font-family:Montserrat;font-size:30px;font-weight:700}.header__inner{-ms-flex-direction:row;flex-direction:row}.main{color:#fff}.main,.main__inner{height:100vh}.main__pre-title{font-size:7.2rem;margin:0 0 7rem}.main__title{font-size:15rem;line-height:1em;text-align:center;margin:0 0 7rem}.main__line{background-color:#fff;margin:0 0 50px}.main__btn{width:160px;height:40px;border:3px solid #fff;background:transparent;color:#fff;font-family:Montserrat;font-size:14px;font-weight:700;text-transform:uppercase;position:relative;transition:box-shadow .3s ease;cursor:pointer}.main__btn:hover{box-shadow:6px 6px 0 0 #ff1c68;transition:all .3s ease;background-image:linear-gradient(0deg,hsla(47,95%,76%,.9) 0,hsla(0,83%,73%,.9))}.navigation__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;line-height:18px}.navigation__item{padding:28px;text-transform:uppercase;font-family:Montserrat;font-size:14px;position:relative}.navigation__item_icon{padding:0;margin:0 0 0 41px}.navigation__item:hover{color:#fce38a}.navigation__item:hover:after{width:100%;transition:all .3s ease}.navigation__item:after{content:"";width:0;height:3px;position:absolute;z-index:1;background:#fce38a;left:0;bottom:11px;transition:all .3s ease}.intro__pre-title{font-size:24px;margin:0 0 20px}.intro__title{font-size:30px;margin:0 0 40px}.intro__paragraph{text-align:center;margin:0 0 100px}.about{height:100vh;padding:90px 0 0}.image-holder{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;width:100%;-ms-flex-wrap:wrap;flex-wrap:wrap}.image-holder__inner{-ms-flex-direction:row;flex-direction:row}.block-counter{height:270px;background-color:#95e1d3;display:-ms-flexbox;display:flex}.block-counter__inner{-ms-flex-align:center;align-items:center;width:100%}.block-counter__list{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;width:100%;padding:0}.block-counter__item{text-align:center}.icon-speech-4{background-position:0 0;width:63px;height:61px}.icon-alarm{background-position:0 -61px;width:32px;height:31px}.icon-book-2{background-position:0 -92px;width:32px;height:32px}.icon-bullseye{background-position:0 -124px;width:32px;height:32px}.icon-computer-ok{background-position:0 -156px;width:32px;height:28px}.icon-home{background-position:0 -184px;width:32px;height:31px}.icon-image{background-position:0 -215px;width:32px;height:32px}.icon-line-graph{background-position:0 -247px;width:32px;height:32px}.icon-users{background-position:0 -279px;width:32px;height:23px}.icon-picture-1{background-position:-32px -61px;width:30px;height:30px}.icon-picture{background-position:-32px -91px;width:30px;height:30px}.icon-equalizer{background-position:-32px -121px;width:28px;height:32px}.icon-magnifying-glass{background-position:-32px -153px;width:18px;height:18px}.icon-shopping-card{background-position:-32px -171px;width:18px;height:15px}@media (max-height:700px){.main__pre-title{font-size:5rem}.main__title{font-size:10rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
